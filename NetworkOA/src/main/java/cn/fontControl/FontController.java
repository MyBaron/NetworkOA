package cn.fontControl;import cn.Entity.TeRepairJB;import cn.Service.TeRepairService;import com.google.gson.Gson;import com.google.gson.GsonBuilder;import org.apache.log4j.Logger;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.servlet.ModelAndView;import javax.servlet.http.HttpServletResponse;import java.io.IOException;import java.io.PrintWriter;import java.util.HashMap;import java.util.List;import java.util.Map;import java.util.Optional;/** * Created by baron on 17-8-19. */@Controller@RequestMapping(value = "/font",produces="application/json;charset=utf-8")public class FontController {    @Autowired            private TeRepairService teRepairService;    Logger logger=Logger.getLogger(FontController.class);    @RequestMapping("/createTeBill")    public ModelAndView getTeBill(TeRepairJB teRepairJB,Model model){        System.out.println(teRepairJB);        TeRepairJB teRepairJB1 = teRepairService.fontCreate(teRepairJB);        model.addAttribute("te",teRepairJB1);        return new ModelAndView("fontlogin/Bill");    }    @RequestMapping(value = "/checkTeBill",produces="application/json;charset=utf-8")    public void checkTeBill(@RequestBody String Name,HttpServletResponse response){        response.setContentType("utf-8");        response.setCharacterEncoding("utf-8");        Optional<PrintWriter> writer = null;        try {            writer = Optional.of(response.getWriter());        } catch (IOException e) {            e.printStackTrace();        }        Optional<List<TeRepairJB>> teRepairJBS = Optional.ofNullable(teRepairService.checkTeBill(Name));        Gson gson=new GsonBuilder()                .setDateFormat("yyyy-MM-dd hh:mm")                .create();        if (teRepairJBS.isPresent()){            Map<String,Object> map=new HashMap<>();            map.put("message","成功");            map.put("data",teRepairJBS.get());            String s = gson.toJson(map);            writer.get().write(s);            writer.get().close();        }else {            writer.get().write("{\"message\":\"失败\"}");            writer.get().close();        }    }}